{"version":3,"sources":["webpack:///./index.js"],"names":["msigAbi","require","getKeys","public","localStorage","getItem","secret","storeKeys","kp","setItem","clearHTML","elId","document","getElementById","innerHTML","addHTML","message","insertAdjacentHTML","display","style","showLoginInfo","keyPairFromPhrase","client","phrase","crypto","mnemonicDeriveSignKeys","dictionary","wordCount","path","keyPair","getCustodians","address","contracts","runLocal","abi","functionName","input","response","output","custodians","getTransactions","transactions","submitTransaction","addressFrom","addressTo","value","run","dest","bounce","allBalance","payload","console","log","transId","confirmTransaction","txid","transactionId","window","addEventListener","TONClient","create","servers","loginBtn","logoutBtn","addressInput","custodiansBtn","listtxBtn","signtxBtn","createtxBtn","submittxBtn","remove","pubkey","tx","amount","parseInt","id","Number"],"mappings":"43CACA,IAAMA,EAAUC,EAAQ,QAIxB,SAASC,IACR,MAAO,CACNC,OAAQC,aAAaC,QAAQ,qBAAuB,KACpDC,OAAQF,aAAaC,QAAQ,sBAAwB,MAIvD,SAASE,EAAUC,GAClBJ,aAAaK,QAAQ,mBAAoBD,EAAGL,QAC5CC,aAAaK,QAAQ,oBAAqBD,EAAGF,QAU9C,SAASI,EAAUC,GACTC,SAASC,eAAeF,GAC9BG,UAAY,GAGhB,SAASC,EAAQJ,EAAMK,GACbJ,SAASC,eAAeF,GAC3BM,mBAAmB,YAAtB,MAAyCD,EAAzC,QAGJ,SAASE,EAAQP,EAAMO,GACbN,SAASC,eAAeF,GAC9BQ,MAAMD,QAAUA,EAAU,QAAU,OAGxC,SAASE,IACRV,EAAU,aACV,IAAIF,EAAKN,IAKRa,EAAQ,YAJJP,EAIG,gBAA8BA,EAAGL,OAAjC,IAHc,iB,SASRkB,E,qFAAf,WAAiCC,EAAQC,GAAzC,4FACiB,oBACe,GACQ,EAHxC,SAIqBD,EAAOE,OAAOC,uBAAuB,CAC9CC,WAF4B,EAG5BC,UAJoB,GAKpBJ,OAAQA,EACRK,KAPK,sBADjB,cAIKC,EAJL,yBAUQA,GAVR,4C,+BAaeC,E,qFAAf,WAA6BR,EAAQS,GAArC,sGACwBT,EAAOU,UAAUC,SAAS,CAC5CF,QAASA,EACTG,IAAKlC,EACLmC,aAAc,gBACdC,MAAO,KALb,cACOC,EADP,yBAOQA,EAASC,OAAOC,YAPxB,4C,+BAUeC,E,qFAAf,WAA+BlB,EAAQS,GAAvC,sGACwBT,EAAOU,UAAUC,SAAS,CAC5CF,QAASA,EACTG,IAAKlC,EACLmC,aAAc,kBACdC,MAAO,KALb,cACOC,EADP,yBAOQA,EAASC,OAAOG,cAPxB,4C,+BAUeC,E,2FAAf,WAAiCpB,EAAQqB,EAAaC,EAAWC,EAAOrC,GAAxE,sGACwBc,EAAOU,UAAUc,IAAI,CAC3Cf,QAASY,EACTT,IAAKlC,EACLmC,aAAc,oBACdC,MAAO,CACNW,KAAMH,EACNC,MAAOA,EACPG,QAAQ,EACRC,YAAY,EACZC,QAAS,IAEVrB,QAASrB,IAZX,cACO6B,EADP,OAcCc,QAAQC,IAAIf,GAdb,kBAeQA,EAASC,OAAOe,SAfxB,4C,+BAkBeC,E,yFAAf,WAAkChC,EAAQqB,EAAaY,EAAM/C,GAA7D,sGACwBc,EAAOU,UAAUc,IAAI,CAC3Cf,QAASY,EACTT,IAAKlC,EACLmC,aAAc,qBACdC,MAAO,CACNoB,cAAeD,GAEhB1B,QAASrB,IARX,cACO6B,EADP,OAUCc,QAAQC,IAAIf,GAVb,kBAWQA,GAXR,4C,sBAgBAoB,OAAOC,iBAAiB,QAAQ,WAC5B,2BAAC,0HACAtC,IACAF,EAAQ,mBAAmB,GAC3BA,EAAQ,kBAAkB,GAC1BA,EAAQ,eAAe,GAJvB,SAMwByC,IAAUC,OAAO,CAClCC,QAAS,CAAC,iBAPjB,OAMSvC,EANT,OAWSwC,EAAWlD,SAASC,eAAe,SACnCkD,EAAYnD,SAASC,eAAe,UACpCmD,EAAepD,SAASC,eAAe,WACvCoD,EAAgBrD,SAASC,eAAe,cACxCqD,EAAYtD,SAASC,eAAe,UACpCsD,EAAYvD,SAASC,eAAe,UACpCuD,EAAcxD,SAASC,eAAe,YACtCwD,EAAczD,SAASC,eAAe,YAE5CmD,EAAanB,MAAQ,qEAErBiB,EAASJ,iBAAiB,QAA1B,2BAAmC,0GAC5BnC,EAASX,SAASC,eAAe,UAAUgC,MADf,SAEnBxB,EAAkBC,EAAQC,GAFP,OAGlChB,EAHkC,QAIlCa,IAJkC,4CAOnC2C,EAAUL,iBAAiB,SAAS,WAnI3CtD,aAAakE,OAAO,oBACpBlE,aAAakE,OAAO,qBAoIZlD,OAGD6C,EAAcP,iBAAiB,QAA/B,2BAAwC,8GAC1CxC,EAAQ,kBAAkB,GAC1BA,EAAQ,eAAe,GAFmB,SAIhBY,EAAcR,EAAQ0C,EAAanB,OAJnB,OAOvC,IAHIN,EAJmC,OAKvC7B,EAAU,mBACVK,EAAQ,kBAAmB,oCAC3B,IAAiBwB,KAAjB,aACCxB,EAAQ,kBADoB,QACIwD,QAEjCrD,EAAQ,mBAAmB,GAVY,6CAaxCgD,EAAUR,iBAAiB,QAA3B,2BAAoC,kHACnCxC,EAAQ,mBAAmB,GAC9BA,EAAQ,eAAe,GAFe,SAIVsB,EAAgBlB,EAAQ0C,EAAanB,OAJ3B,OAQnC,IAJIJ,EAJ+B,OAKnCU,QAAQC,IAAIX,GACZ/B,EAAU,eACVK,EAAQ,cAAe,8BACvB,IAAe0B,KAAf,aAAS+B,EAAoB,QACxBC,EAASC,SAASF,EAAG3B,MAAO,IAAM,IACtC9B,EAAQ,cAAkByD,EAAGG,GAAtB,KAA6BF,EAA7B,UAA6CD,EAAGzB,MAExD7B,EAAQ,kBAAkB,GAZS,6CAepCiD,EAAUT,iBAAiB,QAA3B,2BAAoC,0GAC/BH,EAAO3C,SAASC,eAAe,QAAQgC,MADR,SAElBS,EAAmBhC,EAAQ0C,EAAanB,MAAOU,EAAMrD,KAFnC,0DAKpCkE,EAAYV,iBAAiB,SAAS,WACrCxC,EAAQ,mBAAmB,GAC9BA,EAAQ,kBAAkB,GACvBA,EAAQ,eAAe,MAGxBmD,EAAYX,iBAAiB,QAA7B,2BAAsC,4GACjCe,EAA2D,IAAlDG,OAAOhE,SAASC,eAAe,UAAUgC,OAClDD,EAAYhC,SAASC,eAAe,aAAagC,MAFhB,SAGrBH,EAAkBpB,EAAQ0C,EAAanB,MAAOD,EAAW6B,EAAQvE,KAH5C,OAIrCa,EAAQ,cAAD,UAJ8B,oDAzEzC,2CAAD,O","file":"main.fd9097e5f105f9350bf0.js","sourcesContent":["import { TONClient, setWasmOptions } from 'ton-client-web-js';\nconst msigAbi = require('./SafeMultisigWallet.abi.json');\n\n// Storage\n\nfunction getKeys() {\n\treturn {\n\t\tpublic: localStorage.getItem('msig-tool-pubkey') || null,\n\t\tsecret: localStorage.getItem('msig-tool-privkey') || null\n\t}\n}\n\nfunction storeKeys(kp) {\n\tlocalStorage.setItem('msig-tool-pubkey', kp.public);\n\tlocalStorage.setItem('msig-tool-privkey', kp.secret);\n}\n\nfunction clearKeys() {\n\tlocalStorage.remove('msig-tool-pubkey');\n\tlocalStorage.remove('msig-tool-privkey');\n}\n\n// DOM\n\nfunction clearHTML(elId) {\n\tlet el = document.getElementById(elId);\n\tel.innerHTML = \"\";\n}\n\nfunction addHTML(elId, message) {\n\tlet el = document.getElementById(elId);\n    el.insertAdjacentHTML(\"beforeend\", `<p>${message}</p>`);\n}\n\nfunction display(elId, display) {\n\tlet el = document.getElementById(elId);\n\tel.style.display = display ? 'block' : 'none';\n}\n\nfunction showLoginInfo() {\n\tclearHTML('logged-in')\n\tlet kp = getKeys();\n\tif (!kp) {\n\t\taddHTML('logged-in', 'Not Logged In');\n\t}\n\telse {\n\t\taddHTML('logged-in', `Logged in as ${kp.public}.`)\n\t}\n}\n\n// TON OS\n\nasync function keyPairFromPhrase(client, phrase) {\n\tconst HD_PATH = \"m/44'/396'/0'/0/0\";\n\tconst SEED_PHRASE_WORD_COUNT = 12;\n\tconst SEED_PHRASE_DICTIONARY_ENGLISH = 1;\n\tlet keyPair = await client.crypto.mnemonicDeriveSignKeys({\n            dictionary: SEED_PHRASE_DICTIONARY_ENGLISH,\n            wordCount: SEED_PHRASE_WORD_COUNT,\n            phrase: phrase,\n            path: HD_PATH\n        });\n\treturn keyPair;\n};\n\nasync function getCustodians(client, address) {\n\tconst response = await client.contracts.runLocal({\n\t\t    address: address,\n\t\t    abi: msigAbi,\n\t\t    functionName: 'getCustodians',\n\t\t    input: {}\n\t\t});\n\treturn response.output.custodians\n}\n\nasync function getTransactions(client, address) {\n\tconst response = await client.contracts.runLocal({\n\t\t    address: address,\n\t\t    abi: msigAbi,\n\t\t    functionName: 'getTransactions',\n\t\t    input: {}\n\t\t});\n\treturn response.output.transactions\n}\n\nasync function submitTransaction(client, addressFrom, addressTo, value, kp) {\n\tconst response = await client.contracts.run({\n\t\taddress: addressFrom,\n\t\tabi: msigAbi,\n\t\tfunctionName: 'submitTransaction',\n\t\tinput: {\n\t\t\tdest: addressTo,\n\t\t\tvalue: value,\n\t\t\tbounce: false,\n\t\t\tallBalance: false,\n\t\t\tpayload: \"\"\n\t\t},\n\t\tkeyPair: kp\n\t})\n\tconsole.log(response);\n\treturn response.output.transId\n}\n\nasync function confirmTransaction(client, addressFrom, txid, kp) {\n\tconst response = await client.contracts.run({\n\t\taddress: addressFrom,\n\t\tabi: msigAbi,\n\t\tfunctionName: 'confirmTransaction',\n\t\tinput: {\n\t\t\ttransactionId: txid\n\t\t},\n\t\tkeyPair: kp\n\t});\n\tconsole.log(response);\n\treturn response\n}\n\n// main\n\nwindow.addEventListener('load', () => {\n    (async () => {\n    \tshowLoginInfo();\n    \tdisplay('resp-custodians', false);\n    \tdisplay('content-signtx', false);\n    \tdisplay('ui-createtx', false);\n\n        const client = await TONClient.create({\n            servers: ['net.ton.dev']\n        });\n        // exhaust indicate color target want model cry garbage range write light flee - 82fc180e86668f31e7a11aa64bb0fb68129979abd5a4f9ab8420179d3c864d2f\n        // fire gaze canyon slot maid science twenty shuffle arch episode wet rude - ab81ebc2833c1d58524baac1b72ca731d62cc8bb4abccc07a15826e03e336bf6\n        const loginBtn = document.getElementById('login');\n        const logoutBtn = document.getElementById('logout');\n        const addressInput = document.getElementById('address');\n        const custodiansBtn = document.getElementById('custodians');\n        const listtxBtn = document.getElementById('listtx');\n        const signtxBtn = document.getElementById('signtx');\n        const createtxBtn = document.getElementById('createtx');\n        const submittxBtn = document.getElementById('submittx');\n\n        addressInput.value = '0:fb47c850a5d38287d09ce4f7c29e41dcceb78b27bef10f47c0eed62a6bd67e89'\n        \n        loginBtn.addEventListener('click', async () => {\n        \tconst phrase = document.getElementById('phrase').value;\n        \tlet kp = await keyPairFromPhrase(client, phrase);\n        \tstoreKeys(kp);\n        \tshowLoginInfo();\n        });\n\n        logoutBtn.addEventListener('click', () => {\n        \tclearKeys();\n        \tshowLoginInfo();\n        })\n\n        custodiansBtn.addEventListener('click', async () => {\n\t    \tdisplay('content-signtx', false);\n\t    \tdisplay('ui-createtx', false);\n\n        \tlet custodians = await getCustodians(client, addressInput.value);\n        \tclearHTML('resp-custodians');\n        \taddHTML('resp-custodians', \"------ CUSTODIAN PUB KEYS ------\");\n        \tfor (let cust of custodians) {\n        \t\taddHTML('resp-custodians', cust.pubkey);\n        \t};\n        \tdisplay('resp-custodians', true);\n        })\n\n        listtxBtn.addEventListener('click', async () => {\n        \tdisplay('resp-custodians', false);\n    \t\tdisplay('ui-createtx', false);\n\n        \tlet transactions = await getTransactions(client, addressInput.value);\n        \tconsole.log(transactions);\n        \tclearHTML('resp-listtx');\n        \taddHTML('resp-listtx', \"------ TRANSACTIONS ------\");\n        \tfor (let tx of transactions) {\n        \t\tlet amount = parseInt(tx.value, 16) / 1000000000\n        \t\taddHTML('resp-listtx', `${tx.id}: ${amount} ðŸ’Ž -> ${tx.dest}`)\n        \t}\n        \tdisplay('content-signtx', true);\n        })\n\n        signtxBtn.addEventListener('click', async () => {\n        \tlet txid = document.getElementById('txid').value;\n        \tlet resp = await confirmTransaction(client, addressInput.value, txid, getKeys());\n        })\n\n        createtxBtn.addEventListener('click', () => {\n        \tdisplay('resp-custodians', false);\n    \t\tdisplay('content-signtx', false);\n        \tdisplay('ui-createtx', true);\n        })\n\n        submittxBtn.addEventListener('click', async () => {\n        \tlet amount = Number(document.getElementById('amount').value) * 1000000000\n        \tlet addressTo = document.getElementById('addressTo').value\n        \tlet tid = await submitTransaction(client, addressInput.value, addressTo, amount, getKeys());\n        \taddHTML('ui-createtx', `Tx ID: ${tid}`)\n        })\n    })();\n});\n"],"sourceRoot":""}